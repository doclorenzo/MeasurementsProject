#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <Adafruit_Sensor.h>
#include <Adafruit_BME280.h>
#include "WiFi.h"
#include <InfluxDbClient.h>
#include <InfluxDbCloud.h>

#define SCREEN_WIDTH 128 
#define SCREEN_HEIGHT 64 
#define OLED_RESET 4 
#define BLU 2
#define WIFI_NETWORK ssid
#define WIFI_PASSWORD password 
#define WIFI_TIMEOUT_MS 20000
#define DEVICE "ESP32"
#define INFLUXDB_URL "http://<ip>:8086"
#define INFLUXDB_TOKEN token
#define INFLUXDB_ORG "org"
#define INFLUXDB_BUCKET "bucket"
#define TZ_INFO "CET-1CEST,M3.5.0/2,M10.5.0/3"


Adafruit_SSD1306 display (SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET); 
Adafruit_BME280 bme; 
InfluxDBClient client(INFLUXDB_URL, INFLUXDB_ORG, INFLUXDB_BUCKET, INFLUXDB_TOKEN, InfluxDbCloud2CACert);
Point sensor("MisuraPrsTemHum");

void connectToWiFi(){
  Serial.print("Connecting to wifi");
  WiFi.mode(WIFI_STA); 
  WiFi.begin(WIFI_NETWORK, WIFI_PASSWORD); 
  while(WiFi.status() != WL_CONNECTED){ 
    Serial.print(".");
    delay(100);
  }
  if(WiFi.status() != WL_CONNECTED){
    Serial.print("Failed");
  }else{
    Serial.print("Connected!\nIp:  ");
    Serial.print(WiFi.localIP()); 
    digitalWrite(BLU, HIGH);
  }
}

void setup() {
  Serial.begin(9600);
  pinMode(BLU, OUTPUT);
  connectToWiFi();
  Wire.begin(); 
  display.begin(SSD1306_SWITCHCAPVCC, 0x3C); 
  bme.begin(0x76);  
  display.clearDisplay(); 
  sensor.addTag("device", DEVICE);
  sensor.addTag("SSID", WiFi.SSID());
   if (client.validateConnection()) {
    Serial.print("\nConnected to InfluxDB: ");
    Serial.println(client.getServerUrl());
  } else {
    Serial.print("InfluxDB connection failed: ");
    Serial.println(client.getLastErrorMessage());
  }
}

void loop() {
  //conf
  display.clearDisplay();
  display.setTextColor(WHITE);
  display.setCursor(0,0);
  sensor.clearFields();

  //misure
  float hum=bme.readHumidity();
  float tem=bme.readTemperature();
  int prs=int(bme.readPressure());

  //display oled
  display.printf("\n\nTemperatura: %sC\n\n",String(tem));
  display.printf("Umidita: %s%\n\n",String(hum));
  display.printf("Pressione: %s hPa\n",String(prs));
  display.display();

  // Store measured value into point
  sensor.addField("hum", hum);
  sensor.addField("tem", tem);
  sensor.addField("prs", prs);

  // Print what are we exactly writing
  Serial.print("Writing: ");
  Serial.println(sensor.toLineProtocol());
  if (!client.writePoint(sensor)) {
    Serial.print("InfluxDB write failed: ");
    Serial.println(client.getLastErrorMessage());
  }
  delay(10000);
}

